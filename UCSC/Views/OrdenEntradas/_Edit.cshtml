@model UCSC.Models.DetalleEntrada

<div class="row wrapper border-bottom white-bg page-heading">
    <h2>Entrada de Stock</h2>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox-title">
                <h3>Ingrese los datos de la entrada de Stock</h3>
            </div>
            <div class="ibox-content">
                <input type="hidden" id="id_orden" value="@Model.id_orden" />
                
                <div class="form-group row">
                    <label class="col-sm-1">Nombre: </label>
                    <div class="col-sm-4">
                        @Html.DropDownList("epp", null, "Seleccione epp", htmlAttributes: new { @class = "form-control select2" })

                    </div>
                    <label class="col-sm-1">Cantidad: </label>
                    <div class="col-sm-2">
                        <input type="number" name="cantidad" class="form-control" id="cantidad" />
                    </div>
                    <input type="button" id="agregar" value="Agregar" class="btn btn-primary" />
                </div>
                <div>
                    <hr>
                </div>
                <div id="tablaEPP" class="form-group row">
                    <hr />
                    <div class="table-responsive">
                        <table id="detalleEPP" class="table">
                            <thead>
                                <tr>
                                    <th>Código</th>
                                    <th>Nombre</th>
                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                            </tbody>
                        </table>



                    </div>



                </div>
                <div>
                    <hr>
                    <div class="form-group row">
                        <label class="col-sm-1">Comentario</label>
                        <div class="col-sm-7">
                            <input type="text" id="comentario" class="form-control" />
                        </div>
                    </div>
                    <div>
                        <input type="button" id="guardar" value="Guardar" class="btn btn-success" />
                    </div>
                </div>


            </div>
        </div>
    </div>
</div>

<link href="~/Content/plugins/sweetalert/sweetalert.css" rel="stylesheet" />
<link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/plugins/sweetalert/sweetalert.min.js"></script>
<script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
<script src="~/Scripts/plugins/sweetalert/sweetalert.min.js"></script>

<script>
    //select2
    let datos = [];
    let id_epp = 0;
    let id_orden = 0;
    let nombre = '';
    let nombreParaEdita = "";
    let cantidadParaEdit = "";

    //pasar el modelo como variable de sesión
    //--------

    //Función recibe un arreglo de datos para utilizar
    function cargarTablaDetalle(datos) {

        $('#detalleEPP tbody').empty()
        for (let i = 0; i < datos.length; i++) {
            fila = '<tr>';
            //fila += '<td>' + datos[i].id_epp + '</td>';
            //fila += '<td>' + datos[i].nombre + '</td>';
            //fila += '<td>' + datos[i].cantidad + '</td>';
            fila += '<td>' + datos[i] + '</td>';
            fila += '<td>' + datos[i] + '</td>';
            fila += '<td>' + datos[i] + '</td>';
            fila += "<td><button class='btn btn-danger eliminar'><span class='fa fa-trash'></span></button>";
            fila += '</tr>';

            $('#detalleEPP tbody').append(fila);
            eliminar();
        }
    }



    //Función para cargar la tablA EN EL INIT
    $(document).ready(function ()
    {



        @*let modelo = {

            id_orden: @Model.id_orden,
            nombreParaEdita: @Model.EPP.nombre,
            cantidadParaEdit: parseInt(@Model.cantidad),
        };*@


        alert(@Model.id_orden);

        datos.push(modelo);
        cargarTablaDetalle(datos);
    });



    $('.select2').select2();


    $('#agregar').click(function () {

        let error = '';
        if ($('#epp').val().trim() == '')
            error = 'Debe ingresar un producto \n';
        console.log(error);
        if ($('#cantidad').val() <= 0)
            error += 'Debe ingresar cantidad de EPP';
        if (error != '')
            swal('Error', error, 'warning');
        else {
            let modelo = {
               
                id_epp: $('#epp').val().trim(),
                nombre: $('#epp option:selected').text(),
                cantidad: $('#cantidad').val()
            };

            let x = 0;

            if (datos.length > 0) {

                for (let i = 0; i < datos.length; i++) {
                    if (datos[i].id_epp == modelo.id_epp) {
                        datos[i].cantidad = modelo.cantidad;
                        x = 1;
                        break;
                    }
                }
                if (x == 0) {
                    datos.push(modelo);
                }
            }
            else {
                datos.push(modelo);
            }

            cargarTablaDetalle(datos);
            limpiar();
        }

        

    });

    $('#guardar').click(function () {
        //validación de datos
        let error = '';

        if (datos.length == 0)
            error += 'Debe agregar productos';
        if (error != '')
            swal('Error', error, 'warning');
        else {
            const ordenEntrada = {
                comentario: $('#comentario').val()
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("OrdenEntrada")',
                data: '{orden:' + JSON.stringify(ordenEntrada) + ',detalles:' + JSON.stringify(datos) + '}',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (resp) {
                    if (resp == '') {
                        swal({
                            title: 'Ingreso',
                            text: 'Los datos se han guardado con éxito!',
                            icon: 'success',
                            button: 'Cerrar',
                            closeOnClickOutside: false,
                        }).then(function (isConfirm) {
                            if (isConfirm) {
                                location.reload();//recarga la página
                            }
                        });
                    }
                }

            });
        }
    });


    function eliminar() {
        $('.eliminar').click(function () {

            //obtener el código de la fila donde se presiona el botón de trash
            let cod = $(this).parents('tr').find('td').eq(0).html();
            for (let i = 0; i < datos.length; i++) {
                if (datos[i].id_epp == cod) {
                    datos.splice(i, 1);//splice sirve para sacar elementos del arreglo
                }
            }
            //llamar a función cargar tabla para recargar el arreglo en la tabla
            cargarTablaDetalle();
            //si la cantidad de elementos que hay en la tabla es == 0 la oculta

        });
    }

    function limpiar() {

        $('#cantidad').val('');
        $('#epp').val();
        $('#epp').select2("val", "");
    }




</script>